
class VisibilityManager {
  constructor(radioButtonsSelector, elementsSelectors) {
    this.radioButtons = document.querySelectorAll(radioButtonsSelector);
    this.elementsSelectors = elementsSelectors;
    this.initEvents();
  }

  initEvents() {
    this.radioButtons.forEach(radioButton => {
      radioButton.addEventListener('change', this.onRadioButtonChange.bind(this));
    });
  }

  onRadioButtonChange(event) {
    const radioButton = event.target;
    const selector = this.elementsSelectors[radioButton.value];
    this.toggleVisibility(selector);
  }

  hideAll() {
    Object.values(this.elementsSelectors).forEach(selector => {
      const elements = document.querySelectorAll(selector);
      elements.forEach(el => el.style.display = 'none');
    });
  }

  showElements(selector) {
    const elements = document.querySelectorAll(selector);
    elements.forEach(el => el.style.display = '');
  }

  toggleVisibility(selectorToShow) {
    this.hideAll();
    this.showElements(selectorToShow);
  }
}

// Usage
document.addEventListener('DOMContentLoaded', () => {
  const visibilityManager = new VisibilityManager('.my-radio', {
    'radio1': '#panel1, #gridview1',
    'radio2': '#panel2, #gridview2',
    'radio3': '#panel3, #gridview3'
  });
});















///////////////////////////////////////////////////////////


document.addEventListener("DOMContentLoaded", function() {
    // Select all checkboxes with id starting with "pytanieBlad"
    let checkboxes = document.querySelectorAll('input[type="checkbox"][id^="pytanieBlad"]');

    checkboxes.forEach(checkbox => {
        checkbox.addEventListener("change", function() {
            let hiddenFieldId = "hf_" + checkbox.id;
            let hiddenField = document.getElementById(hiddenFieldId);
            if (hiddenField) {
                hiddenField.value = checkbox.checked ? "true" : "false";
            }
        });
    });
});



<ul>
    <li class="Twitter">
        <a href="https://twitter.com/flowuhhWEB" target="blank_">
            <h3>Twitter</h3>
            <p>Follow us on Twitter to see updates on work, events and careers.</p>
            <i class="fa fa-twitter"></i>
        </a>
    </li>
    <li class="Dribbble">
        <a href="https://dribbble.com/flowuhh" target="blank_">
            <h3>Dribbble</h3>
            <p>Our Dribbble showcases off our prototype designs which you can try to build.</p>
            <i class="fa fa-dribbble"></i>
        </a>
    </li>
    <li class="GitHub">
        <a href="https://github.com/flowuhh" target="blank_">
            <h3>GitHub</h3>
            <p>All of our projects can be forked and worked on through GitHub.</p>
            <i class="fa fa-github"></i>
        </a>
    </li>
</ul>

@import url('https://fonts.googleapis.com/css?family=Roboto:400,900');

body {
    font-family: "Roboto", sans-serif;
    background-color: #f2f2f2;
    line-height: 1.2;
}

ul {
    width: 60vw;
    padding: 0;
    margin: 0;
    list-style: none;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

@media (max-width: 840px) {
    ul {
        width: 80vw;
    }
}

ul li {
    border-bottom: 2px solid #e6e6e6;
    position: relative;
    overflow: hidden;
    transition: 0.2s ease-in-out;
}

ul li a {
    display: block;
    padding: 30px;
    text-decoration: none;
    color: #222;
    transition: 0.2s ease-in-out;
}

ul li a h3 {
    margin: 0 0 15px;
    font-size: 30px;
    font-weight: 900;
}

ul li a p {
    margin: 0;
    font-size: 20px;
    max-width: calc(100% - 110px);
}

ul li a i {
    position: absolute;
    top: 50%;
    right: 50px;
    transform: translatey(-50%);
    font-size: 80px !important;
    opacity: 0.25;
}

ul li.Twitter:hover {
    background-color: #55acee;
}

ul li.Dribbble:hover {
    background-color: #ea4c89;
}

ul li.GitHub:hover {
    background-color: #333;
}

ul li:hover {
    box-shadow: 0 10px 15px 0 #e6e6e6;
}

ul li:hover > a {
    color: #fff;
}

ul li:first-child {
    border-top: 2px solid #e6e6e6;
}
